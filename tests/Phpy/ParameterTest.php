<?php
namespace Phpy\Test;

use Phpy\Parameter;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-10-28 at 20:14:05.
 */
class ParameterTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Parameter
     */
    protected $parameter;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->parameter = new Parameter('paramName');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Parameter::setByRef
     */
    public function testSetAndIsByRef()
    {
        $this->parameter->setByRef(true);

        $this->assertTrue($this->parameter->isByRef());
    }

    /**
     * @covers Parameter::setDefaultValue
     * @covers Parameter::getDefaultValue
     * @covers Parameter::hasDefaultValue
     */
    public function testSetAndGetAndHasDefaultValue()
    {
        $this->parameter->setDefaultValue('yeah');

        $this->assertTrue($this->parameter->hasDefaultValue());
        $this->assertEquals('yeah', $this->parameter->getDefaultValue());

        $this->setExpectedException('InvalidArgumentException');
        $this->parameter->setDefaultValue(new \stdClass());
    }

    /**
     * @covers Parameter::removeDefaultValue
     */
    public function testRemoveDefaultValue()
    {
        $this->parameter->setDefaultValue('ciao')->removeDefaultValue();

        $this->assertFalse($this->parameter->hasDefaultValue());
    }

    /**
     * @covers Parameter::setName
     * @covers Parameter::getName
     */
    public function testSetAndGetName()
    {
        $this->parameter->setName('xxx');

        $this->assertEquals('xxx', $this->parameter->getName());
    }

    /**
     * @covers Parameter::setTypeHint
     */
    public function testSetAndGetTypeHint()
    {
        $this->parameter->setTypeHint('ahia');

        $this->assertEquals('ahia', $this->parameter->getTypeHint());
    }
}
